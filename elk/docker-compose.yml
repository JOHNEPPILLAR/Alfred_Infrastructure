version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: 'true'
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      discovery.type: single-node
    networks:
      - alfred

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    hostname: kibana
    restart: always
    labels:
      com.centurylinklabs.watchtower.enable: 'true'
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - '5601:5601'
    networks:
      - alfred
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    image: filebeat
    container_name: filebeat
    hostname: filebeat
    restart: always
    networks:
      - alfred
    volumes:
      - type: bind
        source: ./filebeat/config/filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELK_HOST=$ELK_HOST

networks:
  alfred:
    name: alfred
    driver: bridge

volumes:
  elasticsearch:
